{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":5,"numPassedTests":88,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":5,"numTotalTests":88,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1663881439096,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["[T2] ViewingAreaController","Setting video property"],"duration":5,"failureMessages":[],"fullName":"[T2] ViewingAreaController Setting video property updates the property and emits a videoChange event if the property changes","location":null,"status":"passed","title":"updates the property and emits a videoChange event if the property changes"},{"ancestorTitles":["[T2] ViewingAreaController","Setting video property"],"duration":0,"failureMessages":[],"fullName":"[T2] ViewingAreaController Setting video property does not emit a videoChange event if the video property does not change","location":null,"status":"passed","title":"does not emit a videoChange event if the video property does not change"},{"ancestorTitles":["[T2] ViewingAreaController","Setting elapsedTimeSec property"],"duration":1,"failureMessages":[],"fullName":"[T2] ViewingAreaController Setting elapsedTimeSec property updates the model and emits a progressChange event if the property changes","location":null,"status":"passed","title":"updates the model and emits a progressChange event if the property changes"},{"ancestorTitles":["[T2] ViewingAreaController","Setting elapsedTimeSec property"],"duration":1,"failureMessages":[],"fullName":"[T2] ViewingAreaController Setting elapsedTimeSec property does not emit a progressChange event if the elapsedTimeSec property does not change","location":null,"status":"passed","title":"does not emit a progressChange event if the elapsedTimeSec property does not change"},{"ancestorTitles":["[T2] ViewingAreaController","Setting isPlaying property"],"duration":1,"failureMessages":[],"fullName":"[T2] ViewingAreaController Setting isPlaying property updates the model and emits a playbackChange event if the property changes","location":null,"status":"passed","title":"updates the model and emits a playbackChange event if the property changes"},{"ancestorTitles":["[T2] ViewingAreaController","Setting isPlaying property"],"duration":1,"failureMessages":[],"fullName":"[T2] ViewingAreaController Setting isPlaying property does not emit a playbackChange event if the isPlaying property does not change","location":null,"status":"passed","title":"does not emit a playbackChange event if the isPlaying property does not change"},{"ancestorTitles":["[T2] ViewingAreaController","updateFrom"],"duration":2,"failureMessages":[],"fullName":"[T2] ViewingAreaController updateFrom Updates the isPlaying, elapsedTimeSec and video properties","location":null,"status":"passed","title":"Updates the isPlaying, elapsedTimeSec and video properties"},{"ancestorTitles":["[T2] ViewingAreaController","updateFrom"],"duration":0,"failureMessages":[],"fullName":"[T2] ViewingAreaController updateFrom Does not update the id property","location":null,"status":"passed","title":"Does not update the id property"}],"endTime":1663881449652,"message":"","name":"/Users/jon/Documents/NEU/Teaching/Fall2022-CS4530/ip2-grader/handout/frontend/src/classes/ViewingAreaController.test.ts","startTime":1663881439980,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["[T2] ConversationAreaController","isEmpty"],"duration":5,"failureMessages":[],"fullName":"[T2] ConversationAreaController isEmpty Returns true if the occupants list is empty","location":null,"status":"passed","title":"Returns true if the occupants list is empty"},{"ancestorTitles":["[T2] ConversationAreaController","isEmpty"],"duration":1,"failureMessages":[],"fullName":"[T2] ConversationAreaController isEmpty Returns true if the topic is undefined","location":null,"status":"passed","title":"Returns true if the topic is undefined"},{"ancestorTitles":["[T2] ConversationAreaController","isEmpty"],"duration":1,"failureMessages":[],"fullName":"[T2] ConversationAreaController isEmpty Returns false if the occupants list is set and the topic is defined","location":null,"status":"passed","title":"Returns false if the occupants list is set and the topic is defined"},{"ancestorTitles":["[T2] ConversationAreaController","setting the occupants property"],"duration":2,"failureMessages":[],"fullName":"[T2] ConversationAreaController setting the occupants property does not update the property if the new occupants are the same set as the old","location":null,"status":"passed","title":"does not update the property if the new occupants are the same set as the old"},{"ancestorTitles":["[T2] ConversationAreaController","setting the occupants property"],"duration":1,"failureMessages":[],"fullName":"[T2] ConversationAreaController setting the occupants property emits the occupantsChange event when setting the property and updates the model","location":null,"status":"passed","title":"emits the occupantsChange event when setting the property and updates the model"},{"ancestorTitles":["[T2] ConversationAreaController","setting the topic property"],"duration":1,"failureMessages":[],"fullName":"[T2] ConversationAreaController setting the topic property does not update the property if the topic is the same string","location":null,"status":"passed","title":"does not update the property if the topic is the same string"},{"ancestorTitles":["[T2] ConversationAreaController","setting the topic property"],"duration":1,"failureMessages":[],"fullName":"[T2] ConversationAreaController setting the topic property emits the topicChange event when setting the property and updates the model","location":null,"status":"passed","title":"emits the topicChange event when setting the property and updates the model"}],"endTime":1663881449727,"message":"","name":"/Users/jon/Documents/NEU/Teaching/Fall2022-CS4530/ip2-grader/handout/frontend/src/classes/ConversationAreaController.test.ts","startTime":1663881439980,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["TownController","With an unsuccesful connection"],"duration":27,"failureMessages":[],"fullName":"TownController With an unsuccesful connection Throws an error","location":null,"status":"passed","title":"Throws an error"},{"ancestorTitles":["TownController","With a successful connection"],"duration":9,"failureMessages":[],"fullName":"TownController With a successful connection Initializes the properties of the controller","location":null,"status":"passed","title":"Initializes the properties of the controller"},{"ancestorTitles":["TownController","With a successful connection"],"duration":3,"failureMessages":[],"fullName":"TownController With a successful connection Forwards update town calls to local CoveyTownEvents listeners","location":null,"status":"passed","title":"Forwards update town calls to local CoveyTownEvents listeners"},{"ancestorTitles":["TownController","With a successful connection"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection Forwards delete town calls to local CoveyTownEvents listeners","location":null,"status":"passed","title":"Forwards delete town calls to local CoveyTownEvents listeners"},{"ancestorTitles":["TownController","With a successful connection"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection Forwards chat messages to local CoveyTownEvents listeners","location":null,"status":"passed","title":"Forwards chat messages to local CoveyTownEvents listeners"},{"ancestorTitles":["TownController","With a successful connection"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection Emits the local player's movement updates to the socket and to locally subscribed CoveyTownEvents listeners","location":null,"status":"passed","title":"Emits the local player's movement updates to the socket and to locally subscribed CoveyTownEvents listeners"},{"ancestorTitles":["TownController","With a successful connection"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection Emits locally written chat messages to the socket, and dispatches no other events","location":null,"status":"passed","title":"Emits locally written chat messages to the socket, and dispatches no other events"},{"ancestorTitles":["TownController","With a successful connection"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection Emits conversationAreasChanged when a conversation area is created","location":null,"status":"passed","title":"Emits conversationAreasChanged when a conversation area is created"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Conversation Area updates"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Conversation Area updates Emits a conversationAreasChanged event with the updated list of conversation areas if the area is newly occupied","location":null,"status":"passed","title":"Emits a conversationAreasChanged event with the updated list of conversation areas if the area is newly occupied"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Conversation Area updates"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Conversation Area updates Emits a conversationAreasChanged event with the updated list of converation areas if the area is newly vacant","location":null,"status":"passed","title":"Emits a conversationAreasChanged event with the updated list of converation areas if the area is newly vacant"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Conversation Area updates"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Conversation Area updates Does not emit a conversationAreasChanged event if the set of active areas has not changed","location":null,"status":"passed","title":"Does not emit a conversationAreasChanged event if the set of active areas has not changed"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Conversation Area updates"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Conversation Area updates Emits a topicChange event if the topic of a conversation area changes","location":null,"status":"passed","title":"Emits a topicChange event if the topic of a conversation area changes"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Conversation Area updates"],"duration":1,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Conversation Area updates Does not emit a topicChange event if the topic is unchanged","location":null,"status":"passed","title":"Does not emit a topicChange event if the topic is unchanged"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Conversation Area updates"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Conversation Area updates Emits an occupantsChange event if the occupants changed","location":null,"status":"passed","title":"Emits an occupantsChange event if the occupants changed"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Conversation Area updates"],"duration":1,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Conversation Area updates Does not emit an occupantsChange if the occupants have not changed","location":null,"status":"passed","title":"Does not emit an occupantsChange if the occupants have not changed"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Viewing Area updates"],"duration":2,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Viewing Area updates Updates the viewing area model","location":null,"status":"passed","title":"Updates the viewing area model"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Viewing Area updates"],"duration":1,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Viewing Area updates Emits a playbackChange event if isPlaying changes","location":null,"status":"passed","title":"Emits a playbackChange event if isPlaying changes"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Viewing Area updates"],"duration":1,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Viewing Area updates Emits a progressChange event if the elapsedTimeSec chagnes","location":null,"status":"passed","title":"Emits a progressChange event if the elapsedTimeSec chagnes"},{"ancestorTitles":["TownController","With a successful connection","interactableUpdate events","Viewing Area updates"],"duration":1,"failureMessages":[],"fullName":"TownController With a successful connection interactableUpdate events Viewing Area updates Emits a videoChange event if the video changes","location":null,"status":"passed","title":"Emits a videoChange event if the video changes"},{"ancestorTitles":["TownController","Processing events that are received over the socket from the townService"],"duration":0,"failureMessages":[],"fullName":"TownController Processing events that are received over the socket from the townService Emits playersChanged events when players join","location":null,"status":"passed","title":"Emits playersChanged events when players join"},{"ancestorTitles":["TownController","Processing events that are received over the socket from the townService"],"duration":1,"failureMessages":[],"fullName":"TownController Processing events that are received over the socket from the townService Emits playersChanged events when players leave","location":null,"status":"passed","title":"Emits playersChanged events when players leave"},{"ancestorTitles":["TownController","Processing events that are received over the socket from the townService"],"duration":1,"failureMessages":[],"fullName":"TownController Processing events that are received over the socket from the townService Emits playerMoved events when players join","location":null,"status":"passed","title":"Emits playerMoved events when players join"},{"ancestorTitles":["TownController","Processing events that are received over the socket from the townService"],"duration":1,"failureMessages":[],"fullName":"TownController Processing events that are received over the socket from the townService Emits playerMoved events when players move","location":null,"status":"passed","title":"Emits playerMoved events when players move"},{"ancestorTitles":["TownController"],"duration":1,"failureMessages":[],"fullName":"TownController Disconnects the socket and clears the coveyTownController when disconnection","location":null,"status":"passed","title":"Disconnects the socket and clears the coveyTownController when disconnection"}],"endTime":1663881450547,"message":"","name":"/Users/jon/Documents/NEU/Teaching/Fall2022-CS4530/ip2-grader/handout/frontend/src/classes/TownController.test.ts","startTime":1663881439980,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["TownController-Dependent Hooks","usePlayers"],"duration":18,"failureMessages":[],"fullName":"TownController-Dependent Hooks usePlayers Returns initial state for the town","location":null,"status":"passed","title":"Returns initial state for the town"},{"ancestorTitles":["TownController-Dependent Hooks","usePlayers"],"duration":6,"failureMessages":[],"fullName":"TownController-Dependent Hooks usePlayers Updates players in response to playersChanged events","location":null,"status":"passed","title":"Updates players in response to playersChanged events"},{"ancestorTitles":["TownController-Dependent Hooks","usePlayers"],"duration":3,"failureMessages":[],"fullName":"TownController-Dependent Hooks usePlayers Adds exactly one listener","location":null,"status":"passed","title":"Adds exactly one listener"},{"ancestorTitles":["TownController-Dependent Hooks","usePlayers"],"duration":2,"failureMessages":[],"fullName":"TownController-Dependent Hooks usePlayers Removes the listener when the component is unmounted","location":null,"status":"passed","title":"Removes the listener when the component is unmounted"},{"ancestorTitles":["TownController-Dependent Hooks","usePlayers"],"duration":3,"failureMessages":[],"fullName":"TownController-Dependent Hooks usePlayers Adds a listener on first render and does not re-register a listener on each render","location":null,"status":"passed","title":"Adds a listener on first render and does not re-register a listener on each render"},{"ancestorTitles":["TownController-Dependent Hooks","usePlayers"],"duration":4,"failureMessages":[],"fullName":"TownController-Dependent Hooks usePlayers Removes the listener if the townController changes and adds one to the new controller","location":null,"status":"passed","title":"Removes the listener if the townController changes and adds one to the new controller"},{"ancestorTitles":["TownController-Dependent Hooks","useActiveConversationAreas"],"duration":16,"failureMessages":[],"fullName":"TownController-Dependent Hooks useActiveConversationAreas Returns an initial state of the active conversation areas","location":null,"status":"passed","title":"Returns an initial state of the active conversation areas"},{"ancestorTitles":["TownController-Dependent Hooks","useActiveConversationAreas"],"duration":3,"failureMessages":[],"fullName":"TownController-Dependent Hooks useActiveConversationAreas Updates its value in response to conversationAreasChanged events","location":null,"status":"passed","title":"Updates its value in response to conversationAreasChanged events"},{"ancestorTitles":["TownController-Dependent Hooks","useActiveConversationAreas"],"duration":3,"failureMessages":[],"fullName":"TownController-Dependent Hooks useActiveConversationAreas Only adds a listener once","location":null,"status":"passed","title":"Only adds a listener once"},{"ancestorTitles":["TownController-Dependent Hooks","useActiveConversationAreas"],"duration":3,"failureMessages":[],"fullName":"TownController-Dependent Hooks useActiveConversationAreas Removes the listener when the component is unmounted","location":null,"status":"passed","title":"Removes the listener when the component is unmounted"},{"ancestorTitles":["TownController-Dependent Hooks","useActiveConversationAreas"],"duration":3,"failureMessages":[],"fullName":"TownController-Dependent Hooks useActiveConversationAreas Adds a listener on first render and does not re-register a listener on each render","location":null,"status":"passed","title":"Adds a listener on first render and does not re-register a listener on each render"},{"ancestorTitles":["TownController-Dependent Hooks","useActiveConversationAreas"],"duration":3,"failureMessages":[],"fullName":"TownController-Dependent Hooks useActiveConversationAreas Removes the listener if the townController changes and adds one to the new controller","location":null,"status":"passed","title":"Removes the listener if the townController changes and adds one to the new controller"},{"ancestorTitles":["TownController-Dependent Hooks","useTownSettings"],"duration":7,"failureMessages":[],"fullName":"TownController-Dependent Hooks useTownSettings Returns initial state for the town","location":null,"status":"passed","title":"Returns initial state for the town"},{"ancestorTitles":["TownController-Dependent Hooks","useTownSettings"],"duration":2,"failureMessages":[],"fullName":"TownController-Dependent Hooks useTownSettings Updates isPubliclyListed in response to townSettingsUpdated events","location":null,"status":"passed","title":"Updates isPubliclyListed in response to townSettingsUpdated events"},{"ancestorTitles":["TownController-Dependent Hooks","useTownSettings"],"duration":2,"failureMessages":[],"fullName":"TownController-Dependent Hooks useTownSettings Updates friendlyName in response to townSettingsUpdated events","location":null,"status":"passed","title":"Updates friendlyName in response to townSettingsUpdated events"},{"ancestorTitles":["TownController-Dependent Hooks","useTownSettings"],"duration":2,"failureMessages":[],"fullName":"TownController-Dependent Hooks useTownSettings Updates both settings in response to townSettingsUpdated events","location":null,"status":"passed","title":"Updates both settings in response to townSettingsUpdated events"},{"ancestorTitles":["TownController-Dependent Hooks","useTownSettings"],"duration":2,"failureMessages":[],"fullName":"TownController-Dependent Hooks useTownSettings Adds exactly one listener","location":null,"status":"passed","title":"Adds exactly one listener"},{"ancestorTitles":["TownController-Dependent Hooks","useTownSettings"],"duration":2,"failureMessages":[],"fullName":"TownController-Dependent Hooks useTownSettings Removes the listener when the component is unmounted","location":null,"status":"passed","title":"Removes the listener when the component is unmounted"},{"ancestorTitles":["TownController-Dependent Hooks","useTownSettings"],"duration":2,"failureMessages":[],"fullName":"TownController-Dependent Hooks useTownSettings Adds a listener on first render and does not re-register a listener on each render","location":null,"status":"passed","title":"Adds a listener on first render and does not re-register a listener on each render"},{"ancestorTitles":["TownController-Dependent Hooks","useTownSettings"],"duration":3,"failureMessages":[],"fullName":"TownController-Dependent Hooks useTownSettings Removes the listener if the townController changes and adds one to the new controller","location":null,"status":"passed","title":"Removes the listener if the townController changes and adds one to the new controller"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaOccupants"],"duration":2,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaOccupants Returns an initial state of the players in the area","location":null,"status":"passed","title":"Returns an initial state of the players in the area"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaOccupants"],"duration":2,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaOccupants Updates the occupants list in response to occupantsChange events","location":null,"status":"passed","title":"Updates the occupants list in response to occupantsChange events"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaOccupants"],"duration":2,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaOccupants Removes its update listener when the component unmounts","location":null,"status":"passed","title":"Removes its update listener when the component unmounts"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaOccupants"],"duration":2,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaOccupants Adds a listener on first render and does not re-register a listener on each render","location":null,"status":"passed","title":"Adds a listener on first render and does not re-register a listener on each render"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaOccupants"],"duration":3,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaOccupants Removes its listener and registers a new one if the area changes","location":null,"status":"passed","title":"Removes its listener and registers a new one if the area changes"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaTopic"],"duration":2,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaTopic Returns an initial state of the topic for the area","location":null,"status":"passed","title":"Returns an initial state of the topic for the area"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaTopic"],"duration":2,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaTopic Returns NO_TOPIC_STRING if the topic is undefined","location":null,"status":"passed","title":"Returns NO_TOPIC_STRING if the topic is undefined"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaTopic"],"duration":1,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaTopic Updates the topic in response to topicChange events","location":null,"status":"passed","title":"Updates the topic in response to topicChange events"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaTopic"],"duration":2,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaTopic Removes its update listener when the component unmounts","location":null,"status":"passed","title":"Removes its update listener when the component unmounts"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaTopic"],"duration":1,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaTopic Adds a listener on first render and does not re-register a listener on each render","location":null,"status":"passed","title":"Adds a listener on first render and does not re-register a listener on each render"},{"ancestorTitles":["ConversationAreaController hooks","useConversationAreaTopic"],"duration":2,"failureMessages":[],"fullName":"ConversationAreaController hooks useConversationAreaTopic Removes its listener and registers a new one if the area changes","location":null,"status":"passed","title":"Removes its listener and registers a new one if the area changes"}],"endTime":1663881450673,"message":"","name":"/Users/jon/Documents/NEU/Teaching/Fall2022-CS4530/ip2-grader/handout/frontend/src/hooks/hooks.test.tsx","startTime":1663881439980,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Viewing Area Video","ReactPlayer rendering"],"duration":73,"failureMessages":[],"fullName":"Viewing Area Video ReactPlayer rendering Contains exactly one participant-wrapper","location":null,"status":"passed","title":"Contains exactly one participant-wrapper"},{"ancestorTitles":["Viewing Area Video","ReactPlayer rendering"],"duration":37,"failureMessages":[],"fullName":"Viewing Area Video ReactPlayer rendering Sets the videoURL","location":null,"status":"passed","title":"Sets the videoURL"},{"ancestorTitles":["Viewing Area Video","ReactPlayer rendering"],"duration":34,"failureMessages":[],"fullName":"Viewing Area Video ReactPlayer rendering Sets the playing property","location":null,"status":"passed","title":"Sets the playing property"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer","Registering ViewingAreaController listeners","When rendered"],"duration":27,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Registering ViewingAreaController listeners When rendered Registers exactly one progressChange listener","location":null,"status":"passed","title":"Registers exactly one progressChange listener"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer","Registering ViewingAreaController listeners","When rendered"],"duration":28,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Registering ViewingAreaController listeners When rendered Removes the progressChange listener at unmount","location":null,"status":"passed","title":"Removes the progressChange listener at unmount"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer","Registering ViewingAreaController listeners","When rendered"],"duration":32,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Registering ViewingAreaController listeners When rendered Registers exactly one playbackChange listener","location":null,"status":"passed","title":"Registers exactly one playbackChange listener"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer","Registering ViewingAreaController listeners","When rendered"],"duration":26,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Registering ViewingAreaController listeners When rendered Removes the playbackChange listener at unmount","location":null,"status":"passed","title":"Removes the playbackChange listener at unmount"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer","Registering ViewingAreaController listeners","When re-rendered with a different viewing area controller"],"duration":24,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Registering ViewingAreaController listeners When re-rendered with a different viewing area controller Removes the listeners on the old viewing area controller and adds listeners to the new controller","location":null,"status":"passed","title":"Removes the listeners on the old viewing area controller and adds listeners to the new controller"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer"],"duration":26,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Pauses the video on playbackChange","location":null,"status":"passed","title":"Pauses the video on playbackChange"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer"],"duration":27,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Unpauses the video on playbackChange","location":null,"status":"passed","title":"Unpauses the video on playbackChange"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer"],"duration":23,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Seeks the video when the drift is more than ALLOWED_DRIFT","location":null,"status":"passed","title":"Seeks the video when the drift is more than ALLOWED_DRIFT"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ViewingAreaController to the ReactPlayer"],"duration":22,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ViewingAreaController to the ReactPlayer Does not seek the video if the drift is less than ALLOWED_DRIFT","location":null,"status":"passed","title":"Does not seek the video if the drift is less than ALLOWED_DRIFT"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ReactPlayer to the ViewingAreaController"],"duration":22,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ReactPlayer to the ViewingAreaController Registers listeners for onProgress, onPlay, onPause, and onEnded","location":null,"status":"passed","title":"Registers listeners for onProgress, onPlay, onPause, and onEnded"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ReactPlayer to the ViewingAreaController"],"duration":24,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ReactPlayer to the ViewingAreaController updates the viewing area controller's model and emits an update to the town onPlay","location":null,"status":"passed","title":"updates the viewing area controller's model and emits an update to the town onPlay"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ReactPlayer to the ViewingAreaController"],"duration":21,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ReactPlayer to the ViewingAreaController updates the viewing area controller's model and emits an update to the town onPause","location":null,"status":"passed","title":"updates the viewing area controller's model and emits an update to the town onPause"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ReactPlayer to the ViewingAreaController"],"duration":19,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ReactPlayer to the ViewingAreaController updates the viewing area controller's model and emits an update to the town onEnded","location":null,"status":"passed","title":"updates the viewing area controller's model and emits an update to the town onEnded"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ReactPlayer to the ViewingAreaController"],"duration":21,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ReactPlayer to the ViewingAreaController updates the viewing area controller's model and emits an update to the town onProgress","location":null,"status":"passed","title":"updates the viewing area controller's model and emits an update to the town onProgress"},{"ancestorTitles":["Viewing Area Video","Bridging events from the ReactPlayer to the ViewingAreaController"],"duration":23,"failureMessages":[],"fullName":"Viewing Area Video Bridging events from the ReactPlayer to the ViewingAreaController does not emit an update to the town for onPlay, onPause, onEnded or onProgress if the new state matches the existing state of the controller","location":null,"status":"passed","title":"does not emit an update to the town for onPlay, onPause, onEnded or onProgress if the new state matches the existing state of the controller"}],"endTime":1663881452048,"message":"","name":"/Users/jon/Documents/NEU/Teaching/Fall2022-CS4530/ip2-grader/handout/frontend/src/components/Town/interactables/ViewingAreaVideo.test.tsx","startTime":1663881439980,"status":"passed","summary":""}],"wasInterrupted":false}